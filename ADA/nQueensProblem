#include<bits/stdc++.h>
#define n 4  //Size of Array
using namespace std;
int m =0;

//Function to check if a queen can be placed at a particular row and column or not
bool isSafe(char board[][n],int row,int col) 
{
    //Checking Vertically Up
    for(int i = row -1; i>=0; i--)
    {
        if(board[i][col] == 'Q')
           return false;
    }

    //Checking Diagonally left
    for(int i = row-1,j = col-1; i>=0,j>=0;i--,j--)
    {
        if(board[i][j] == 'Q')
        return false;
    }

    //Checking Diagonaly Right
    for(int i = row-1,j= col+1; i>=0,j<n;i--,j++)
    {
        if(board[i][j] == 'Q')
          return false;
    }

    return true;
}

//Function too print the Board if queens are placed in all rows
void print(char board[][n])
{
    cout<<"Chess Board : "<<m<<endl;
    for(int i =0; i<n; i++)
    {
        for(int j=0; j<n;j++)
        {
            cout<<board[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    // return ;
}

//Function to Find all possible solutions
void nQueens(char board[][n],int row)
{
    if(row == n)
    {
        m++;
        print(board);
        return ;
    }

    for(int j =0; j<n;j++)
    {
        if(isSafe(board,row,j))
        {
            board[row][j] = 'Q';
            nQueens(board,row+1);
            board[row][j] = '*';
        }
    }
    // return ;
}

int main()
{
    char board[n][n];
    for(int i =0;i<n;i++)
    {
        for(int j =0; j<n;j++)
        {
            board[i][j] = '*';
        }
    }


    cout<<"For n = "<<n<<endl;
    cout<<"Total Possible Chess Boards with "<<n<<" Queens placed in each row and their count."<<endl;
    cout<<"-----------------------------------------------------------------------------"<<endl<<endl;
    // cout<<"------------------------------------------------------------------------------------"<<endl<<endl;

    nQueens(board,0);

    return 0;
}
